
var argv = require('optimist').argv;
var EnhanceCSS = require('../index');
var fs = require('fs');
var path = require('path');
var util = require('util');

var options = {
  source: null,
  target: null,
  rootPath: null,
  assetHosts: null,
  pregzip: false,
  noEmbed: false,
  cryptedStamp: false,
  stamp: true
};
var fromStdin = !process.env['__DIRECT__'] && process.stdin.readable;

if (argv.noembedversion) { options.noEmbed = true; }
if (argv.assethosts) { options.assetHosts = argv.assethosts; }
if (argv.pregzip) { options.pregzip = true; }
if (argv.cryptedstamp) { options.cryptedStamp = true; }
if (argv.o) { options.target = argv.o; }
if (argv._) { options.source = argv._[0]; }
if (argv.nostamp) { options.stamp = false; }

options.rootPath = argv.root || process.cwd();

if (argv.v) {
  var packageConfig = fs.readFileSync(path.join(path.dirname(fs.realpathSync(process.argv[1])), '../package.json'));
  util.puts(JSON.parse(packageConfig).version);
}

if (argv.h || argv.help || (!fromStdin && argv._.length === 0)) {
  util.print('usage: enhancecss -o <output-file> [--cryptedstamp] [--noembedversion] [--assethosts <host-pattern>] [--root <root-path>] [--pregzip <input-file>]\n');
}

if (options.source) {
  fs.readFile(options.source, 'utf8', function(error, text) {
    if (error) {
      throw error;
    }
    enhance(text, output);
  });
} else {
  var stdin = process.openStdin();
  stdin.setEncoding('utf-8');
  var text = '';
  stdin.on('data', function(chunk) { text += chunk; });
  stdin.on('end', function() { enhance(text, output); });
}

function enhance(source, callback) {
  return new EnhanceCSS({ rootPath: options.rootPath,
    assetHosts: options.assetHosts,
    noEmbedVersion: options.noEmbed,
    cryptedStamp: options.cryptedStamp,
    pregzip: options.pregzip,
    stamp: options.stamp
  }).process(source, function(error, data) {
    if (error) {
      throw error;
    }
    callback(data);
  });
}

function write(target, content) {
  if (typeof target == "string") {
    fs.writeFileSync(target, content.plain);

    if (options.pregzip) {
      fs.writeFileSync(target + '.gz', content.compressed);
    }
  } else {
    target.write(content);
  }
}

function output(enhanced) {
  if (options.target) {
    write(options.target, enhanced.embedded);
   if (options.noEmbed) {
     write(options.target.replace(/\.(\w+)$/, '-noembed.$1'), enhanced.notEmbedded);
   }
  } else {
    write(process.stdout, enhanced.embedded);
  }
}
